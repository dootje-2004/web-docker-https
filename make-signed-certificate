#!/usr/bin/env bash

# Creates a private key and a signed certificate to deploy on a server.
#
# Usage:  make-ca (--settings-file | -s) <filename> domain
#
# Either argument (settings file or domain) may be omitted, in which case
# the user is prompted for it.

# Process the command line.
SETTINGS_FILE=settings
i=1
while [ $i -le $# ]; do
    if [[ ${!i} == "-s" || ${!i} == "--settings-file" ]]; then
        ((i++))
        SETTINGS_FILE=${!i}
    else
        DOMAIN=${!i}
    fi
    ((i++))
done

# If no domain was found on the command line, ask for it.
if [ -z $DOMAIN  ]; then
    read -p "Enter domain name: " DOMAIN
fi
echo "Domain is $DOMAIN"

# If no settings file was found on the command line, ask for it.
if [ -z $SETTINGS_FILE  ]; then
    read -p "Enter settings file: " SETTINGS_FILE
fi

# Check for settings file.
if [ ! -f settings ]; then
    echo "Settings file $SETTINGS_FILE not found"
    exit 1
fi
echo "Settings file is '$SETTINGS_FILE'"
source $SETTINGS_FILE

# Check for CA key value.
if [ -z $CA_KEY_FILE ]; then
    echo "No CA key defined in $SETTINGS_FILE"
    exit 2
fi
echo "CA keyfile is $CA_KEY_FILE"

# Check for CA key.
if [ ! -f $CA_KEY_FILE ]; then
    echo "CA key $CA_KEY_FILE not found"
    exit 3
fi

# Check for CA certificate value.
if [ -z $CA_CRT_FILE ]; then
    echo "No CA certificate defined in $SETTINGS_FILE"
    exit 4
fi
echo "CA certificate is $CA_CRT_FILE"

# Check for CA certificate.
if [ ! -f $CA_CRT_FILE ]; then
    echo "CA certificate $CA_CRT_FILE not found"
    exit 5
fi

# Check for CA passphrase filename.
if [ -z $CA_PASS_FILE ]; then
    echo "No CA passphrase file defined in $SETTINGS_FILE"
    exit 6
fi
echo "CA passphrase file is $CA_PASS_FILE"

# Check for CA passphrase file.
if [ ! -f $CA_PASS_FILE ]; then
    echo "CA passphrase file $CA_PASS_FILE not found"
    exit 7
fi
CA_PASSPHRASE=<(cat ca-password)

# Check for domain passphrase filename to use as output.
if [ -z $PASSPHRASE_FILE ]; then
    echo "No passphrase output file defined in $SETTINGS_FILE"
    exit 8
fi
echo "Passphrase output file is $PASSPHRASE_FILE"

# Ask for domain passphrase.
read -s -p "Enter passphrase for private key: " DOMAIN_PASS
echo

# Generate private key.
openssl genpkey -quiet -algorithm rsa -pass pass:$DOMAIN_PASS \
-aes256 -out $DOMAIN.key

# Create a signing request from the private key.
openssl req -new -key $DOMAIN.key -out $DOMAIN.csr \
-passin pass:$DOMAIN_PASS -subj "/CN=$DOMAIN" \
-addext "subjectAltName=email:admin@$DOMAIN"

# Sign the request with the CA root certificate.
openssl x509 -in $DOMAIN.csr -req -CA $CA_CRT_FILE -CAkey $CA_KEY_FILE \
-passin pass:$CA_PASSPHRASE -out $DOMAIN.crt \
-extfile <(printf "authorityKeyIdentifier=keyid,issuer\n
basicConstraints=CA:FALSE\nsubjectAltName=DNS:$DOMAIN")

# Create a passphrase file for Apache.
printf "#!/bin/sh\necho \"$DOMAIN_PASS\"" > $PASSPHRASE_FILE
chmod a+x $PASSPHRASE_FILE
echo "Passphrase written to $PASSPHRASE_FILE"

echo "Done"
